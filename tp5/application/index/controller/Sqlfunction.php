<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2022/8/19
 * Time: 15:49
 */
namespace app\index\controller;

use think\Controller;
use think\Db;
use think\Request;
use app\index\model\UserModal;
use think\Model;
use think\facade\Hook;

class Sqlfunction extends Controller
{
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
    }

    protected $user;
    public function __construct(UserModal $user)//依赖注入
    {
        $this->user = $user;
    }
    public function yilai(){
        echo $this->user->name;
    }

    public function database()
    {
        $where[] = array('name','like', '%' . '吃' . '%');
        $where[] = array('age',array('=', '34'), array('=', '1'), 'or');

        $s = Db:: table('user')->field('id')->where($where)->select();
        var_dump(Db::getLastSql($s));

        //$modUser = new User();
        //$arr = $modUser->getwc($where, 'id desc', '-1', '-1');
        //print_r($arr);
    }

    //添加数据 insert
    public function insert(){
        $data['name'] = 'aaa';
        $data['age'] = '10';
        //$s  = Db::name('user')->insert($data);//插入
        $s  = Db::name('user')->insertGetId($data);//返回主键
        var_dump(Db::getLastSql($s));
        print_r($s);
    }

    public function insertall(){
        //$data = array();
        $data = array(array('name'=>'bbb','age'=>'20'),array('name'=>'ccc','age'=>'30'));
        $s = Db::name('user')->insertAll($data);
        var_dump(Db::getLastSql($s));
        print_r($s);
    }

    //更新数据 update
    public function update(){
        $data = array('age'=>'10','name'=>'aabc');
        $s = Db::name('user')->where('id','2')->whereOr('id','1')->update($data);
        var_dump(Db::getLastSql($s));
        print_r($s);
    }

    //保存数据 save 自动判断是新增或更新
    public function save(){
        $data = array('age'=>'10','name'=>'aabc');
        $User = new UserModal();
        $s = $User->save($data);
        if($s){
            //$this->success('success','Sqlfunction/where');
            $this->redirect('Sqlfunction/where',['a'=>2],302);
        }
    }

    //只读 readonly
    public function readonly(){
        $user = UserModal::get(17);
        $user->name = 'aaaaaaaa';
        $user->age = '100';
        $user->save();
    }

    //模型事件
    public function before(){
        $user = new UserModal();
        $data = array('age'=>'1','name'=>'aqqaaaaabc');
        $s = $user->save($data);
        //dump($s);
        if(!$s) {
            return 'age<10';
        }
    }

    public function updateinc(){//自增
        Db::name('user')->where('id','1')->setInc('age');
    }

    //删除 delete
    public function del(){
        //Db::name('user')->where('id','=','5')->delete();
        $data = array('7','8','9');
        Db::name('user')->delete($data);

    }

    //连表 join table
    public function join(){
        $s = Db::name('user')->alias('a')
            ->field('a.id,age,name')
            ->join('class c','a.id = c.user_id','left')
            ->field('classname as cname')->select();
        print_r($s);
    }

    public function groupby(){
        $s = Db::name('class')->field('id,score')->group('classname')->having('score>80')->select();
        print_r($s);

    }

    public function where(){
        $where[] = array('name',array('like','%c%'),array('like','%b%'));
        //$and['age'] = array(array('>',1),array('<','30'));
        $and[] = ['age',['>',0],['<',30]];
        $s = Db::name('user')->whereOr($where)->where($and)->select();

        //$s = Db::name('user')->whereOr('name',array('like','%a%'),array('like','%b%'))->select();
        var_dump(Db::getLastSql($s));
        print_r($s);
    }

    //事务 transaction
    public function trans(){
        Db::startTrans();//开启事务
        try{
            Db::name('user')->where('id','14')->update(array('ages'=>'13'));
            $s = Db::commit();//提交事务
            return $s;
        }
        catch (\Exception $exception){
            Db::rollback();//事务回滚
            $s = $exception->getMessage();
            return $s;
        }
    }

    //行为hook
    public function hook(){
//        Hook::add('app_init',function (){
//           echo 'hookhook';
//        });
        Hook::listen('app_init','111');//控制器方法内需要的地方侦听行为
    }

}